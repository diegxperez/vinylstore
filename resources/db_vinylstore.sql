CREATE TYPE "users_role" AS ENUM (
  'admin',
  'customer',
  'guest'
);

CREATE TYPE "order_status" AS ENUM (
  'pending',
  'shipped',
  'delivered',
  'canceled'
);

CREATE TABLE "users" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_name" varchar(255) NOT NULL,
  "email" varchar(255) UNIQUE NOT NULL,
  "password" varchar NOT NULL,
  "role" users_role DEFAULT 'customer',
  "created_at" timestamp DEFAULT 'now()'
);

CREATE TABLE "products" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" varchar(255) NOT NULL,
  "artist_id" integer NOT NULL,
  "genre_id" integer NOT NULL,
  "stock" integer NOT NULL,
  "price" DECIMAL(10,2) NOT NULL,
  "imagen" varchar,
  "created_at" timestamp DEFAULT 'now()'
);

CREATE TABLE "genres" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "genre_name" varchar(100) UNIQUE NOT NULL
);

CREATE TABLE "orders" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "total" DECIMAL(10,2) NOT NULL,
  "user_id" integer,
  "status" order_status DEFAULT 'delivered',
  "created_at" timestamp DEFAULT 'now()'
);

CREATE TABLE "orders_details" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "order_id" integer,
  "product_id" integer,
  "quantity" integer,
  "price" DECIMAL(10,2) NOT NULL
);

CREATE TABLE "artists" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "artist_name" varchar(255) UNIQUE NOT NULL
);

CREATE INDEX ON "users" ("email");

CREATE INDEX ON "products" ("title");

CREATE INDEX ON "products" ("genre_id");

CREATE INDEX ON "products" ("artist_id");

CREATE INDEX ON "products" ("stock");

CREATE INDEX ON "products" ("price");

CREATE INDEX ON "genres" ("genre_name");

CREATE INDEX ON "orders" ("user_id");

CREATE INDEX ON "orders_details" ("order_id");

CREATE INDEX ON "orders_details" ("product_id");

CREATE INDEX ON "artists" ("artist_name");

ALTER TABLE "orders_details" ADD FOREIGN KEY ("product_id") REFERENCES "products" ("id");

ALTER TABLE "orders_details" ADD FOREIGN KEY ("order_id") REFERENCES "orders" ("id");

ALTER TABLE "orders" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "products" ADD FOREIGN KEY ("artist_id") REFERENCES "artists" ("id");

ALTER TABLE "products" ADD FOREIGN KEY ("genre_id") REFERENCES "genres" ("id");
